/*
01 C++에서 정보를 다루는 법
프로그램이란 기본적으로 정보를 입력 받아 처리, 가공 후에 사용자가 원하는 정보를 결과로 제공.
C++의 모든 정보는 근본적으로 숫자다.
정보를 보관하는 방법은 숫자를 보관하는 방법.

변수는 숫자를 보관할 수 있는 공간이나 방을 의미.
변수는 이름을 갖기 때문에 보관된 값을 읽어볼 수도, 다시 넣을 수도 있다.
4_1.cpp

비트맵
그림을 숫자로 표현하는 방법은 아주 다양하다. 
jpg, gif, bmp 모두 다른 방법으로 그림을 숫자로 변형해서 저장해놓은 파일.
bmp를 갖는 비트맵 파일은 설명과 유사한 방법.

주석
슬래쉬 두개로 시작하는 문장을 주석(Comment).
코드에 대한 설명을 넣는 것.
"이 코드가 왜 이 일을 하는가?"를 설명하는 주석.

변수를 정의하지 않으면 안된다.
방이 없는데 숫자가 들어갈 순 없다.
4_2.cpp

변수를 사용하기 전에 정의해야 한다.
컴퓨터가 위에서부터 아래로 읽는다.
4_3.cpp

변수의 내용을 화면에 출력.
4_4.cpp

디버거의 사용
디버거는 디버깅을 도와주는 프로그램
디버깅은 코드 내의 버그를 찾아내고 고치는 일련의 과정.
변수에 어떤값이 들어있는지 확인하는 기능.

변수의 정의, 그 다양한 모습
변수를 정의함과 동시에 변수에 초기값을 넣는 것이 가능하다.
4_5.cpp

\n
위에서 한 칸 내려서 문자열을 출력하게 만든다.
'엔터'키를 누를 때와 동일한 결과.

한줄에 모두 넣을 수 있다.
int a=100, b=200, c=300;
한 줄에 여러 변수를 정의하는 경우에도 초기 값을 넣지 않는 것이 가능.
int a, b, c;
어떤 것은 초기 값을 넣어주고 어떤 것은 넣어주지 않아도 무방.
int a, b=200, c;
사실 한 줄에 여러 개의 변수를 넣는 것은 권장하진 않는다.

변수에 값을 넣고 빼기
4_6.cpp

우변의 값을 좌변의 변수로 넣는 방식.

변수와 대조되는 의미를 가진 '상수(Constants)'는 항상 일정하다.
대입을 하는 문장에서 좌변에는 변수만 올 수 있고, 우변에는 상수와 변수 모두 올 수 있다.

02 변수를 사용하는 규칙
반드시 지켜야할 규칙
4_7.cpp

오류 메시지는 항상 원하는 대로 나오지 않는다.
정리해보면
중복된 이름의 변수를 사용할 수 없다.
변수 이름에는 알파벳, 숫자, 언더스코어만 포함할 수 있다.
단, 숫자는 변수 이름의 첫번째 글자로 사용할 수 없다.
변수 이름의 길이에는 제한이 없다.
변수 이름에 포함하는 알파벳은 대소문자를 구분한다.
키워드는 변수의 이름으로 사용할 수 없다.

키워드 리스트
asm do if return typedef auto double inline short typeid bool dynamic_cast
nt signed typename break else long sizeof union case enum mutable static unsigned
catch explicit namespace static_cast using char export new struct virtual
class exterm operator switch void const false private template volatile const_cast
float protected this wchar_t continue for public throw while default friend
register true delete goto reinterpret_cast try

변수의 이름을 잘 짓는 법
1)변수의 용도를 예상할 수 있게 이름을 짓자
2)단어와 단어를 구분할 수 있게 짓자
각 단어의 첫 글자를 대분자로 쓰거나 언더스코어를 사용해서 띄어쓰기를 대신
3)필요없이 긴 이름은 피하자

동일한 이름의 변수를 허용하는 경우도 있다.
같은 이름의 변수라도 서로 다른 동네에 존재하는 경우에는 문제가 되지 않는다.
서로 다른 범위에서는 동일한 이름의 변수가 존재할 수 있다.

C에서는 변수의 이름이 63글자를 넘어가는 경우, 63번째 문자까지만 인식.

헝가리안 표기법
변수의 이름을 짓는 방법으로 변수의 이름에 타입과 관련한 정보를 포함.

변수를 언제 정의하는 것이 좋을까?
변수의 정의는 변수를 사용하기 전에만 하면 된다.
사용하기 직전에 변수를 정의하는 것이 제일 좋다.
미리 해놓으면 까먹을 수도 있다.
4_8.cpp
4_9.cpp

성적표 프로그램
4_10.cpp
콘솔 입력이나 파일 입력 기능이 필요.
직접 계산해서 넣는 것이 아니라 컴퓨터가 계산하게.
실수를 보관할 수 있는 방법.
밀려나지 않게 cout객체에 대해.
여러명을 관리하기 위해 배열과 구조체.

*/