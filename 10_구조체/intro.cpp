/*
01 구조체의 기본
왜 구조체를 사용해야 할까
여러 가지 변수를 모아서 그룹처럼 만드는 데 있다.
프로그래밍에 있어서 지향해야 할 것 중에 하나가 '관련된 정보를 그룹화하는 것'

구조체의 정의1
10_1.cpp
구조체 안에 변수들을 정의하는 방법은 평범하게 변수를 정의하는 것과 다르지 않다.
일반적으로는 main()함수의 바깥쪽에서 정의한다.

구조체의 정의와 구조체 변수의 정의
구조체를 정의하는 것은 붕어빵의 틀을 만든 것과 같다.
메모리에선 그냥 변수들이 차례로 생성된 것과 다르지 않다.

구조체와 타입1
지금까지 배운 기본 타입도 같은 방식
int타입은 '정수를 담을 수 있는 변수'를 찍어내기 위한 틀.
변수는 int 타입의 특징의 맞게 만들어진 붕어빵.
구조체는 사용자 정의 타입(User Defined Type)이라고 한다.

멤버의 접근
구조체에 담기는 각 변수들을 멤버 혹은 멤버 변수라고 부른다.
10_2.cpp
멤버의 접근하려면 구조체 변수의 이름을 쓴 후에 점(Dot)을 찍고 멤버의 이름을 적어주면 된다.

구조체와 타입2
구조체 변수의 이름만 cout으로 보내지 않고, 각각의 멤버들을 따로 cout으로 보낼까.
기본 타입은 cout객체가 이미 그 특징을 다 꿰고 있기 때문에 어떻게 출력할지를 알고 있다.
반면에 구조체는 우리가 직접 만든 타입이라서 어떻게 출력할지를 모르는 것.

구조체의 초기화
구조체의 초기화는 배열을 초기화하던 방법과 비슷한 방법을 사용해서 할 수 있다.
10_3.cpp
초기화 할 때는 중괄호 안에 각 멤버의 초기 값을 넣어준다. 순서대로 초기 값.
구조체의 초기화 역시 변수를 정의할 당시 외에는 사용할 수 없다.
StudentInfo si1;
si1 = { 'O',20031128,3.5f };
한 줄에 여러 개의 변수를 동시에 정의할 수 있고, 초기화할 수 있다.

구조체의 대입
구조체 변수끼리의 대입을 의미한다.
10_4.cpp
변수의 대입과 동일하다. 배열은 안되지만 구조체는 가능하다.
pt1의 모든 멤버의 값이 있는 그대로 복사됩니다.
구조체 변수간의 대입은 각 멤버를 모두 대입한 것과 같은 효과를 갖는다.

구조체의 정의2
구조체의 정의와 동시에 구조체 변수를 정의하는 법.
직접 사용할 일은 많지 않지만, 이렇게 사용할 수도 있다는 점.
10_5.cpp
그냥 구조체를 정의하고 세미콜론을 찍기 전에 변수의 이름을 적어주면 된다.

동시에 구조체의 변수까지 정의하는 경우라면 구조체의 이름을 적어주지 않아도된다.
struct{
	int x; //x좌표
	int y; //y좌표
} pt1 = { 30,50 }, pt2;
하지만 이외에 또 다른 변수를 만들 수 없다. 이름이 없기 때문에.

구조체는 main()함수 바깥쪽에 정의하고 변수는 안쪽에 정의되는 경우가 일반적이라 떨어져있다.

*/